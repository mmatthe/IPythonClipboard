{
  "content": {
    "metadata": {
      "kernelspec": {
        "name": "python3",
        "language": "python",
        "display_name": "Python 3"
      },
      "language_info": {
        "name": "python",
        "nbconvert_exporter": "python",
        "file_extension": ".py",
        "version": "3.5.1",
        "pygments_lexer": "ipython3",
        "mimetype": "text/x-python",
        "codemirror_mode": {
          "name": "ipython",
          "version": 3
        }
      }
    },
    "cells": [
      {
        "outputs": [],
        "metadata": {
          "collapsed": true,
          "trusted": true
        },
        "execution_count": 2,
        "cell_type": "code",
        "source": "import requests\nimport json"
      },
      {
        "outputs": [
          {
            "output_type": "stream",
            "name": "stdout",
            "text": "<Response [200]>\n{'content': None, 'created': '2016-12-01T20:24:30.849311+00:00', 'writable': True, 'last_modified': '2016-12-02T13:45:41.481313+00:00', 'name': 'getNB.ipynb', 'path': 'getNB.ipynb', 'mimetype': None, 'type': 'notebook', 'format': None}\n"
          }
        ],
        "metadata": {
          "collapsed": false,
          "trusted": true
        },
        "execution_count": 4,
        "cell_type": "code",
        "source": "R = requests.get(\"http://localhost:8888/api/contents\")\nprint(R)\nprint (R.json()['content'][1])"
      },
      {
        "outputs": [
          {
            "output_type": "stream",
            "name": "stdout",
            "text": "<Response [200]>\n{'metadata': {'kernelspec': {'name': 'python3', 'language': 'python', 'display_name': 'Python 3'}, 'language_info': {'name': 'python', 'nbconvert_exporter': 'python', 'file_extension': '.py', 'version': '3.5.1', 'pygments_lexer': 'ipython3', 'mimetype': 'text/x-python', 'codemirror_mode': {'name': 'ipython', 'version': 3}}}, 'cells': [{'outputs': [], 'metadata': {'collapsed': True, 'trusted': True}, 'execution_count': 1, 'cell_type': 'code', 'source': '# THIS IS THE CONTENT\\n%matplotlib inline\\nimport numpy as np\\nimport matplotlib.pyplot as plt'}, {'outputs': [], 'metadata': {'collapsed': True, 'trusted': True}, 'execution_count': None, 'cell_type': 'code', 'source': ''}], 'nbformat_minor': 0, 'nbformat': 4}\n"
          }
        ],
        "metadata": {
          "collapsed": false,
          "trusted": true
        },
        "execution_count": 5,
        "cell_type": "code",
        "source": "R = requests.get(\"http://localhost:8888/api/contents/Untitled.ipynb\")\nprint(R)\nprint(R.json()['content'])\nC = R.json()['content']"
      },
      {
        "outputs": [
          {
            "output_type": "stream",
            "name": "stdout",
            "text": "<Response [204]>\n<Response [201]>\n"
          }
        ],
        "metadata": {
          "collapsed": false,
          "trusted": true
        },
        "execution_count": 6,
        "cell_type": "code",
        "source": "R = requests.delete(\"http://localhost:8888/api/contents/bla.ipynb\")\nprint(R)\nC['cells'][0]['source'] = \"# just a comment\"\ndata = dict(type=\"notebook\", content=C)\nR = requests.put(\"http://localhost:8888/api/contents/bla.ipynb\", json.dumps(data))\nprint(R)"
      },
      {
        "outputs": [
          {
            "output_type": "stream",
            "name": "stdout",
            "text": "{'outputs': [], 'metadata': {'collapsed': True, 'trusted': True}, 'execution_count': 1, 'cell_type': 'code', 'source': '# just a comment'}\n"
          }
        ],
        "metadata": {
          "collapsed": false,
          "trusted": true
        },
        "execution_count": 7,
        "cell_type": "code",
        "source": "print(C['cells'][0])"
      },
      {
        "outputs": [
          {
            "output_type": "stream",
            "name": "stdout",
            "text": "<Response [200]>\n"
          }
        ],
        "metadata": {
          "collapsed": false,
          "trusted": true
        },
        "execution_count": 19,
        "cell_type": "code",
        "source": "R = requests.get(\"http://localhost:8888/api/contents\", headers={})\nprint (R)"
      },
      {
        "outputs": [],
        "metadata": {
          "collapsed": false,
          "trusted": true
        },
        "execution_count": 18,
        "cell_type": "code",
        "source": "R = requests.get(\"http://localhost:8888/api/contents/getNB.ipynb\")\nassert(R.status_code == 200)\nJ = R.json();\nwith open(\"getNB-contents.json\", \"w\") as f:\n    print (json.dumps(J, indent=2), file=f);"
      },
      {
        "outputs": [],
        "metadata": {
          "collapsed": true,
          "trusted": true
        },
        "execution_count": null,
        "cell_type": "code",
        "source": ""
      }
    ],
    "nbformat_minor": 0,
    "nbformat": 4
  },
  "created": "2016-12-01T20:24:30.849311+00:00",
  "writable": true,
  "last_modified": "2016-12-02T17:45:03.258926+00:00",
  "name": "getNB.ipynb",
  "path": "getNB.ipynb",
  "mimetype": null,
  "type": "notebook",
  "format": "json"
}
